{"version":3,"sources":["components/Buttons.js","components/DiceImage.js","components/Side.js","App.js","index.js"],"names":["Buttons","rollDice","holdScore","dice","isWinner","newGame","className","onClick","DiceImage","src","alt","Side","isActive","score","current","playerName","id","App","useState","activePlayer","setActivePlayer","scorePlayer0","setScorePlayer0","scorePlayer1","setScorePlayer1","currentScore","setCurrentScore","setDice","setIsWinner","changePlayer","rnd","Math","ceil","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAqBeA,EArBC,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACtD,OACE,qCACE,wBAAQC,UAAU,MAAMC,QAASF,EAAjC,uBAGED,GACA,wBAAQE,UAAU,OAAOC,QAASN,EAAlC,uBAKDE,GACC,wBAAQG,UAAU,OAAOC,QAASL,EAAlC,sBCPOM,EANG,SAAC,GAAc,IAAZL,EAAW,EAAXA,KACnB,OACEA,GAAQ,qBAAKG,UAAU,WAAWG,IAAG,sBAAiBN,EAAjB,QAA6BO,IAAI,MCa3DC,EAfF,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,WAAYX,EAAe,EAAfA,SACpD,OACE,sBACEY,GAAE,UAAKZ,GAAY,UACnBE,UAAS,wBAAmBM,GAAY,UAF1C,UAIE,qBAAKN,UAAU,gBAAf,SACE,+BAAOF,EAAQ,UAAMW,EAAa,OAAnB,eAAkCA,OAEnD,qBAAKT,UAAU,iBAAf,SAAiCO,IACjC,qBAAKP,UAAU,eAAf,SAA+BQ,QCuEtBG,MA3Ef,WACE,MAAwCC,mBAAS,YAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAwCJ,mBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAwCN,mBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAwBR,mBAAS,MAAjC,mBAAOf,EAAP,KAAawB,EAAb,KACA,EAAgCT,mBAAS,MAAzC,mBAAOd,EAAP,KAAiBwB,EAAjB,KAEMC,EAAe,WACnBH,EAAgB,GAEZN,EADa,aAAjBD,EACoB,WACA,aAmCtB,OACE,sBAAKb,UAAU,SAAf,UACE,cAAC,EAAD,CACES,WAAW,WACXH,SAA2B,aAAjBO,EACVN,MAAOQ,EACPP,QAA0B,aAAjBK,EAA8BM,EAAe,EACtDrB,SAAuB,aAAbA,IAEZ,cAAC,EAAD,CACEW,WAAW,WACXH,SAA2B,aAAjBO,EACVN,MAAOU,EACPT,QAA0B,aAAjBK,EAA8BM,EAAe,EACtDrB,SAAuB,aAAbA,IAEZ,cAAC,EAAD,CACEH,SAjDW,WACf,IAAM6B,EAAMC,KAAKC,KAAqB,EAAhBD,KAAKE,UAC3BN,EAAQG,GACI,IAARA,EACFJ,EAAgBD,EAAeK,GAE/BD,KA4CE3B,UAxCY,WACK,aAAjBiB,GACFG,EAAgBD,EAAeI,GAC3BJ,EAAeI,GAAgB,IACjCG,EAAY,cAGdJ,EAAgBD,EAAeE,GAC3BF,EAAeE,GAAgB,IACjCG,EAAY,aAGhBC,KA6BI1B,KAAMA,EACNC,SAAUA,EACVC,QA7BU,WACde,EAAgB,YAChBE,EAAgB,GAChBE,EAAgB,GAChBE,EAAgB,GAChBC,EAAQ,MACRC,EAAY,SAyBV,cAAC,EAAD,CAAWzB,KAAMA,QCxEvB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.208415bf.chunk.js","sourcesContent":["const Buttons = ({ rollDice, holdScore, dice, isWinner, newGame }) => {\r\n  return (\r\n    <>\r\n      <button className=\"new\" onClick={newGame}>\r\n        new game\r\n      </button>\r\n      {!isWinner && (\r\n        <button className=\"role\" onClick={rollDice}>\r\n          role dice\r\n        </button>\r\n      )}\r\n\r\n      {dice && (\r\n        <button className=\"hold\" onClick={holdScore}>\r\n          hold\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","const DiceImage = ({ dice }) => {\r\n  return (\r\n    dice && <img className=\"img-dice\" src={`images/dice-${dice}.png`} alt=\"\" />\r\n  );\r\n};\r\n\r\nexport default DiceImage;\r\n","const Side = ({ isActive, score, current, playerName, isWinner }) => {\r\n  return (\r\n    <div\r\n      id={`${isWinner && \"winner\"}`}\r\n      className={`player-0 side ${isActive && \"active\"}`}\r\n    >\r\n      <div className=\"player-0-name\">\r\n        <span>{isWinner ? `${playerName + \" win\"} ` : `${playerName}`}</span>\r\n      </div>\r\n      <div className=\"player-0-score\">{score}</div>\r\n      <div className=\"player-0-sum\">{current}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Side;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Buttons from \"./components/Buttons\";\nimport DiceImage from \"./components/DiceImage\";\nimport Side from \"./components/Side\";\n\nfunction App() {\n  const [activePlayer, setActivePlayer] = useState(\"player-0\");\n  const [scorePlayer0, setScorePlayer0] = useState(0);\n  const [scorePlayer1, setScorePlayer1] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [dice, setDice] = useState(null);\n  const [isWinner, setIsWinner] = useState(null);\n\n  const changePlayer = () => {\n    setCurrentScore(0);\n    activePlayer === \"player-0\"\n      ? setActivePlayer(\"player-1\")\n      : setActivePlayer(\"player-0\");\n  };\n\n  const rollDice = () => {\n    const rnd = Math.ceil(Math.random() * 6);\n    setDice(rnd);\n    if (rnd !== 1) {\n      setCurrentScore(currentScore + rnd);\n    } else {\n      changePlayer();\n    }\n  };\n\n  const holdScore = () => {\n    if (activePlayer === \"player-0\") {\n      setScorePlayer0(scorePlayer0 + currentScore);\n      if (scorePlayer0 + currentScore >= 25) {\n        setIsWinner(\"player-0\");\n      }\n    } else {\n      setScorePlayer1(scorePlayer1 + currentScore);\n      if (scorePlayer1 + currentScore >= 25) {\n        setIsWinner(\"player-1\");\n      }\n    }\n    changePlayer();\n  };\n  const newGame = () => {\n    setActivePlayer(\"player-0\");\n    setScorePlayer0(0);\n    setScorePlayer1(0);\n    setCurrentScore(0);\n    setDice(null);\n    setIsWinner(null);\n  };\n  return (\n    <div className=\"parent\">\n      <Side\n        playerName=\"player A\"\n        isActive={activePlayer === \"player-0\"}\n        score={scorePlayer0}\n        current={activePlayer === \"player-0\" ? currentScore : 0}\n        isWinner={isWinner === \"player-0\"}\n      />\n      <Side\n        playerName=\"player B\"\n        isActive={activePlayer === \"player-1\"}\n        score={scorePlayer1}\n        current={activePlayer === \"player-1\" ? currentScore : 0}\n        isWinner={isWinner === \"player-1\"}\n      />\n      <Buttons\n        rollDice={rollDice}\n        holdScore={holdScore}\n        dice={dice}\n        isWinner={isWinner}\n        newGame={newGame}\n      />\n      <DiceImage dice={dice} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}